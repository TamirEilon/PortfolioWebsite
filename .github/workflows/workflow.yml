name: Build, Push, Run, Check, and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest .
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest
  run-and-check:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Pull Docker Image
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest
        docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest
        
    - name: Check if Container is Running
      run: |
        while true; do
          if curl -s http://localhost:80; then
            echo "Container is up and running."
            break
          else
            echo "Waiting for the container to start..."
            sleep 5
          fi
        done
  deploy-to-gke:
    needs: run-and-check
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
        version: '358.0.0'  # Use the version that works for your setup

    - name: Create GKE Cluster
      run: |
        gcloud container clusters create my-cluster --num-nodes=3 --zone=me-west1-a
        
    - name: Get GKE Credentials
      run: gcloud container clusters get-credentials my-cluster --zone=me-west1-a
      
    - name: Deploy to GKE
      run: |
        kubectl create deployment my-app --image=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest
        kubectl expose deployment my-app --type=LoadBalancer --port=80 --target-port=80
