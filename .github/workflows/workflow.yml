name: Build, Push, Run, Check, and Deplo

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Get Latest Docker Version
      id: latest_version
      run: |
        LATEST_VERSION=$(docker pull ${{ secrets.DOCKER_USERNAME }}/portfolio-website:latest | awk -F ':| ' 'NR==2{print $2}')
        echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

    - name: Determine Semantic Version Bump
      id: semver
      run: |
        COMMIT_MESSAGE=$(git log --format=%B -n 1 $GITHUB_SHA)
        if echo "$COMMIT_MESSAGE" | grep -qiE 'major'; then
          BUMP='major'
        elif echo "$COMMIT_MESSAGE" | grep -qiE 'minor'; then
          BUMP='minor'
        else
          BUMP='patch'
        fi
        echo "BUMP=$BUMP" >> $GITHUB_ENV
        echo "Updating $BUMP version"
        
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/portfolio-website:${{ env.SEMVER }} .
        docker build -t ${{ secrets.DOCKER_USERNAME }}/portfolio-website:latest .
        
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/portfolio-website:${{ env.SEMVER }}
        docker push ${{ secrets.DOCKER_USERNAME }}/portfolio-website:latest
        
  run-and-check:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Pull Docker Image
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/portfolio-website:latest
        docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/portfolio-website:latest
        
    - name: Check if Container is Running
      run: |
        while true; do
          if curl -s http://localhost:80; then
            echo "Container is up and running."
            break
          else
            echo "Waiting for the container to start..."
            sleep 5
          fi
        done

  deploy_to_gke:      
    needs: run-and-check
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: myfinalproject2-395806
          export_default_credentials: true

      - name: install plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Pull image from DockerHub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/portfolio-website:latest

      - name: Set kubectl context to GKE
        run: gcloud container clusters get-credentials my-cluster --region me-west1

      - name: Apply Kubernetes manifests
        run: kubectl apply -f deployment.yml
  
      - name: Trigger GKE rollout
        run: kubectl rollout restart deployment my-deployment
